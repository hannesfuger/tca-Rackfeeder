<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="P_System" Id="{a01e22ae-ea7a-4694-a463-78e560b2a6e0}" SpecialFunc="None">
    <Declaration><![CDATA[/// Program for reading general system informations
PROGRAM P_System
VAR
	fbPulseGetSystemTime: FB_Pulse;
	fbSystemTime: NT_GetTime;
	fbGetTimeString: FB_GetTimeString;
	/// FB to get the index of the current task
	fbTaskIndex: GETCURTASKINDEX;
	iLoopCount: DINT;
	bFirstRun	: BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[///
/// Program, für allgemeine Systemprozeduren
/// 03.04.2012	TP	www.rmth.at
///

//	read system time
fbPulseGetSystemTime(tPulseTime:=T#10MS);
fbSystemTime(NETID:=sEmpty, START:=fbPulseGetSystemTime.Q OR bFirstRun);
fbSystemTime(START:=FALSE);

bFirstRun := FALSE;

dtNow := SYSTEMTIME_TO_DT(fbSystemTime.TIMESTR);
fbGetTimeString();
sTimeString := fbGetTimeString.TimeString;

//  read system informations
fbTaskIndex();
stPlcSystemInfo.stPlcAppSystemInfo := TwinCAT_SystemInfoVarList._AppInfo;
stPlcSystemInfo.stPlcTaskSystemInfo := TwinCAT_SystemInfoVarList._TaskInfo[fbTaskIndex.index];
stPlcSystemInfo.fCycleTime := stPlcSystemInfo.stPlcTaskSystemInfo.CycleTime * 1.0E-7;			// Cycle Time is given in parts of [100ns] --> to [s]
stPlcSystemInfo.fLastExecTime := stPlcSystemInfo.stPlcTaskSystemInfo.LastExecTime * 1.0E-7;		// Cycle Time is given in parts of [100ns] --> to [s]

//  create default pulses
iLoopCount		:= (iLoopCount + 1) MOD 100;			// loop
stPulse.bImpulse1000ms	:= (iLoopCount MOD 100) = 1;	// 1000ms impulse
stPulse.bImpulse500ms	:= (iLoopCount MOD 50) = 1; 	// 500ms impulse
stPulse.bImpulse300ms	:= (iLoopCount MOD 30) = 1; 	// 300ms impulse
stPulse.bImpulse200ms	:= (iLoopCount MOD 20) = 1; 	// 200ms impulse
stPulse.bImpulse100ms	:= (iLoopCount MOD 10) = 1; 	// 100ms impulse

IF stPulse.bImpulse1000ms THEN
	stPulse.bToggle1000ms := NOT stPulse.bToggle1000ms;
END_IF

IF stPulse.bImpulse500ms THEN
	stPulse.bToggle500ms := NOT stPulse.bToggle500ms;
END_IF

IF stPulse.bImpulse300ms THEN
	stPulse.bToggle300ms := NOT stPulse.bToggle300ms;
END_IF

IF stPulse.bImpulse200ms THEN
	stPulse.bToggle200ms := NOT stPulse.bToggle200ms;
END_IF

IF stPulse.bImpulse100ms THEN
	stPulse.bToggle100ms := NOT stPulse.bToggle100ms;
END_IF

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>